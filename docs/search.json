[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 quickcheck authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andrew McNeil. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"McNeil (2021). quickcheck: Property Based Testing. R package version 0.0.0.9000, https://github.com/armcn/quickcheck.","code":"@Manual{,   title = {quickcheck: Property Based Testing},   author = {Andrew McNeil},   year = {2021},   note = {R package version 0.0.0.9000},   url = {https://github.com/armcn/quickcheck}, }"},{"path":[]},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Property Based Testing","text":"Property based testing R, inspired Quickcheck. package builds property based testing framework provided hedgehog designed seamlessly integrate testthat.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Property Based Testing","text":"can install development version quickcheck GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"armcn/quickcheck\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Property Based Testing","text":"following example uses quickcheck test properties base R + function. introduction concept property based testing, explanation mathematical properties addition can found . test properties distinct function dplyr package.","code":"library(testthat) library(quickcheck)  test_that(\"0 is the additive identity of +\", {   for_all(     a = numeric_(),     property = \\(a) expect_equal(a, a + 0)   )           })  test_that(\"+ is commutative\", {   for_all(     a = numeric_(),     b = numeric_(),     property = \\(a, b) expect_equal(a + b, b + a)   )           })  test_that(\"+ is associative\", {   for_all(     a = numeric_(),     b = numeric_(),     c = numeric_(),     property = \\(a, b, c) expect_equal(a + (b + c), (a + b) + c)   )           }) library(dplyr)  test_that(\"distinct does nothing with a single row\", {   for_all(     a = any_tibble(rows = 1L),     property = \\(a) {       distinct(a) |> expect_equal(a)     }   ) })  test_that(\"distinct returns original if rows are repeated\", {   for_all(     a = any_tibble(rows = 1L),     property = \\(a) {       bind_rows(a, a) |> distinct() |> expect_equal(a)     }   ) })  test_that(\"distinct does nothing if rows are unique\", {   for_all(     a = tibble_of(integer_positive(), rows = 1L, cols = 1L),     b = tibble_of(integer_negative(), rows = 1L, cols = 1L),     property = \\(a, b) {       unique_rows <- bind_rows(a, b)       distinct(unique_rows) |> expect_equal(unique_rows)     }   ) })"},{"path":"/reference/any_atomic.html","id":null,"dir":"Reference","previous_headings":"","what":"Atomic vector generator — any_atomic","title":"Atomic vector generator — any_atomic","text":"Generate vectors integer, double, character, logical.","code":""},{"path":"/reference/any_atomic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Atomic vector generator — any_atomic","text":"","code":"any_atomic(len = 1L, frac_na = 0)"},{"path":"/reference/any_atomic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Atomic vector generator — any_atomic","text":"len Length generated vectors. len single number vectors length. len numeric vector length 2 produce vectors lengths minimum maximum, inclusive. example len = c(1L, 10L) produce integer vectors lengths 1 10. frac_na approximate fraction NA values included vector. fraction 0, default, include NA values. fraction 0.5 include around 50% NA values.","code":""},{"path":"/reference/any_atomic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Atomic vector generator — any_atomic","text":"hedgehog.internal.gen generator","code":""},{"path":"/reference/any_flat_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Flat list generator — any_flat_list","title":"Flat list generator — any_flat_list","text":"Generate lists item length 1.","code":""},{"path":"/reference/any_flat_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flat list generator — any_flat_list","text":"","code":"any_flat_list(len = 1L, frac_na = 0)"},{"path":"/reference/any_flat_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flat list generator — any_flat_list","text":"len Length generated vectors. len single number vectors length. len numeric vector length 2 produce vectors lengths minimum maximum, inclusive. example len = c(1L, 10L) produce integer vectors lengths 1 10. frac_na approximate fraction NA values included vector. fraction 0, default, include NA values. fraction 0.5 include around 50% NA values.","code":""},{"path":"/reference/any_flat_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flat list generator — any_flat_list","text":"hedgehog.internal.gen generator","code":""},{"path":"/reference/any_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Random list generator — any_list","title":"Random list generator — any_list","text":"Generate random lists containing lists atomic vectors variable lengths.","code":""},{"path":"/reference/any_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random list generator — any_list","text":"","code":"any_list(len = 1L, frac_na = 0)"},{"path":"/reference/any_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random list generator — any_list","text":"len Length generated vectors. len single number vectors length. len numeric vector length 2 produce vectors lengths minimum maximum, inclusive. example len = c(1L, 10L) produce integer vectors lengths 1 10. frac_na approximate fraction NA values included vector. fraction 0, default, include NA values. fraction 0.5 include around 50% NA values.","code":""},{"path":"/reference/any_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random list generator — any_list","text":"hedgehog.internal.gen generator","code":""},{"path":"/reference/any_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Any vector generator — any_vector","title":"Any vector generator — any_vector","text":"Generate random atomic vectors lists.","code":""},{"path":"/reference/any_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Any vector generator — any_vector","text":"","code":"any_vector(len = 1L, frac_na = 0)"},{"path":"/reference/any_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Any vector generator — any_vector","text":"len Length generated vectors. len single number vectors length. len numeric vector length 2 produce vectors lengths minimum maximum, inclusive. example len = c(1L, 10L) produce integer vectors lengths 1 10. frac_na approximate fraction NA values included vector. fraction 0, default, include NA values. fraction 0.5 include around 50% NA values.","code":""},{"path":"/reference/any_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Any vector generator — any_vector","text":"hedgehog.internal.gen generator","code":""},{"path":"/reference/character_.html","id":null,"dir":"Reference","previous_headings":"","what":"Character generators — character_","title":"Character generators — character_","text":"set generators character vectors.","code":""},{"path":"/reference/character_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Character generators — character_","text":"","code":"character_(len = 1L, frac_na = 0, frac_empty = 0)"},{"path":"/reference/character_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Character generators — character_","text":"len Length generated vectors. len single number vectors length. len numeric vector length 2 produce vectors lengths minimum maximum, inclusive. example len = c(1L, 10L) produce integer vectors lengths 1 10. frac_na approximate fraction NA values included vector. fraction 0, default, include NA values. fraction 0.5 include around 50% NA values. frac_empty approximate fraction empty character values included vector. fraction 0, default, include empty values. fraction 0.5 include around 50% empty values.","code":""},{"path":"/reference/character_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Character generators — character_","text":"hedgehog.internal.gen generator","code":""},{"path":"/reference/constant.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the same value every time — constant","title":"Generate the same value every time — constant","text":"Generate value every time","code":""},{"path":"/reference/constant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the same value every time — constant","text":"","code":"constant(a)"},{"path":"/reference/constant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the same value every time — constant","text":"R object","code":""},{"path":"/reference/constant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the same value every time — constant","text":"hedgehog.internal.gen generator","code":""},{"path":"/reference/date_.html","id":null,"dir":"Reference","previous_headings":"","what":"Date generators — date_","title":"Date generators — date_","text":"set generators date vectors.","code":""},{"path":"/reference/date_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Date generators — date_","text":"","code":"date_(len = 1L, frac_na = 0)  date_bounded(left, right, len = 1L, frac_na = 0)  date_left_bounded(left, len = 1L, frac_na = 0)  date_right_bounded(right, len = 1L, frac_na = 0)"},{"path":"/reference/date_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Date generators — date_","text":"len Length generated vectors. len single number vectors length. len numeric vector length 2 produce vectors lengths minimum maximum, inclusive. example len = c(1L, 10L) produce integer vectors lengths 1 10. frac_na approximate fraction NA values included vector. fraction 0, default, include NA values. fraction 0.5 include around 50% NA values. left minimum possible value generated numbers, inclusive. right maximum possible value generated numbers, inclusive.","code":""},{"path":"/reference/date_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Date generators — date_","text":"hedgehog.internal.gen generator","code":""},{"path":"/reference/double_.html","id":null,"dir":"Reference","previous_headings":"","what":"Double generators — double_","title":"Double generators — double_","text":"set generators double vectors.","code":""},{"path":"/reference/double_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Double generators — double_","text":"","code":"double_(len = 1L, frac_na = 0, frac_nan = 0, frac_inf = 0)  double_bounded(left, right, len = 1L, frac_na = 0, frac_nan = 0, frac_inf = 0)  double_left_bounded(left, len = 1L, frac_na = 0, frac_nan = 0, frac_inf = 0)  double_right_bounded(right, len = 1L, frac_na = 0, frac_nan = 0, frac_inf = 0)  double_positive(len = 1L, frac_na = 0, frac_nan = 0, frac_inf = 0)  double_negative(len = 1L, frac_na = 0, frac_nan = 0, frac_inf = 0)  double_fractional(len = 1L, frac_na = 0, frac_nan = 0, frac_inf = 0)  double_whole(len = 1L, frac_na = 0, frac_nan = 0, frac_inf = 0)"},{"path":"/reference/double_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Double generators — double_","text":"len Length generated vectors. len single number vectors length. len numeric vector length 2 produce vectors lengths minimum maximum, inclusive. example len = c(1L, 10L) produce integer vectors lengths 1 10. frac_na approximate fraction NA values included vector. fraction 0, default, include NA values. fraction 0.5 include around 50% NA values. frac_nan approximate fraction NaN values included vector. fraction 0, default, include NaN values. fraction 0.5 include around 50% NaN values. frac_inf approximate fraction Inf -Inf values included vector. fraction 0, default, include NA values. fraction 0.5 include around 50% NA values. left minimum possible value generated numbers, inclusive. right maximum possible value generated numbers, inclusive.","code":""},{"path":"/reference/double_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Double generators — double_","text":"hedgehog.internal.gen generator","code":""},{"path":"/reference/factor_.html","id":null,"dir":"Reference","previous_headings":"","what":"Factor generator — factor_","title":"Factor generator — factor_","text":"generator factor vectors.","code":""},{"path":"/reference/factor_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factor generator — factor_","text":"","code":"factor_(len = 1L, frac_na = 0)"},{"path":"/reference/factor_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factor generator — factor_","text":"len Length generated vectors. len single number vectors length. len numeric vector length 2 produce vectors lengths minimum maximum, inclusive. example len = c(1L, 10L) produce integer vectors lengths 1 10. frac_na approximate fraction NA values included vector. fraction 0, default, include NA values. fraction 0.5 include around 50% NA values.","code":""},{"path":"/reference/factor_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factor generator — factor_","text":"hedgehog.internal.gen generator","code":""},{"path":[]},{"path":"/reference/for_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"For all — for_all","text":"","code":"for_all(   ...,   property,   tests = get_tests(),   size = get_size(),   shrinks = get_shrinks(),   discards = get_discards() )"},{"path":"/reference/for_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"For all — for_all","text":"... Dots property Property tests Tests size Size shrinks Shrinks discards Discards","code":""},{"path":"/reference/hms_.html","id":null,"dir":"Reference","previous_headings":"","what":"hms generators — hms_","title":"hms generators — hms_","text":"set generators hms vectors.","code":""},{"path":"/reference/hms_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"hms generators — hms_","text":"","code":"hms_(len = 1L, frac_na = 0)  hms_bounded(left, right, len = 1L, frac_na = 0)  hms_left_bounded(left, len = 1L, frac_na = 0)  hms_right_bounded(right, len = 1L, frac_na = 0)"},{"path":"/reference/hms_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"hms generators — hms_","text":"len Length generated vectors. len single number vectors length. len numeric vector length 2 produce vectors lengths minimum maximum, inclusive. example len = c(1L, 10L) produce integer vectors lengths 1 10. frac_na approximate fraction NA values included vector. fraction 0, default, include NA values. fraction 0.5 include around 50% NA values. left minimum possible value generated numbers, inclusive. right maximum possible value generated numbers, inclusive.","code":""},{"path":"/reference/hms_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"hms generators — hms_","text":"hedgehog.internal.gen generator","code":""},{"path":"/reference/integer_.html","id":null,"dir":"Reference","previous_headings":"","what":"Integer generators — integer_","title":"Integer generators — integer_","text":"set generators integer vectors.","code":""},{"path":"/reference/integer_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integer generators — integer_","text":"","code":"integer_(len = 1L, frac_na = 0)  integer_bounded(left, right, len = 1L, frac_na = 0)  integer_left_bounded(left, len = 1L, frac_na = 0)  integer_right_bounded(right, len = 1L, frac_na = 0)  integer_positive(len = 1L, frac_na = 0)  integer_negative(len = 1L, frac_na = 0)"},{"path":"/reference/integer_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integer generators — integer_","text":"len Length generated vectors. len single number vectors length. len numeric vector length 2 produce vectors lengths minimum maximum, inclusive. example len = c(1L, 10L) produce integer vectors lengths 1 10. frac_na approximate fraction NA values included vector. fraction 0, default, include NA values. fraction 0.5 include around 50% NA values. left minimum possible value generated numbers, inclusive. right maximum possible value generated numbers, inclusive.","code":""},{"path":"/reference/integer_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integer generators — integer_","text":"hedgehog.internal.gen generator","code":""},{"path":"/reference/list_.html","id":null,"dir":"Reference","previous_headings":"","what":"List generator — list_","title":"List generator — list_","text":"generate lists contents corresponding values generated input generators.","code":""},{"path":"/reference/list_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List generator — list_","text":"","code":"list_(...)"},{"path":"/reference/list_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List generator — list_","text":"... Generators","code":""},{"path":"/reference/list_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List generator — list_","text":"hedgehog.internal.gen generator","code":""},{"path":"/reference/list_of.html","id":null,"dir":"Reference","previous_headings":"","what":"Variable length list generator — list_of","title":"Variable length list generator — list_of","text":"generate lists values coming single input generator.","code":""},{"path":"/reference/list_of.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variable length list generator — list_of","text":"","code":"list_of(generator, len = 1L)"},{"path":"/reference/list_of.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variable length list generator — list_of","text":"generator Generator len Length generated vectors. len single number vectors length. len numeric vector length 2 produce vectors lengths minimum maximum, inclusive. example len = c(1L, 10L) produce integer vectors lengths 1 10.","code":""},{"path":"/reference/list_of.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variable length list generator — list_of","text":"hedgehog.internal.gen generator","code":""},{"path":"/reference/logical_.html","id":null,"dir":"Reference","previous_headings":"","what":"Logical generators — logical_","title":"Logical generators — logical_","text":"generator logical vectors.","code":""},{"path":"/reference/logical_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logical generators — logical_","text":"","code":"logical_(len = 1L, frac_na = 0)"},{"path":"/reference/logical_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logical generators — logical_","text":"len Length generated vectors. len single number vectors length. len numeric vector length 2 produce vectors lengths minimum maximum, inclusive. example len = c(1L, 10L) produce integer vectors lengths 1 10. frac_na approximate fraction NA values included vector. fraction 0, default, include NA values. fraction 0.5 include around 50% NA values.","code":""},{"path":"/reference/logical_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logical generators — logical_","text":"hedgehog.internal.gen generator","code":""},{"path":"/reference/numeric_.html","id":null,"dir":"Reference","previous_headings":"","what":"Numeric generators — numeric_","title":"Numeric generators — numeric_","text":"set generators numeric vectors. Numeric vectors can either integer double vectors.","code":""},{"path":"/reference/numeric_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Numeric generators — numeric_","text":"","code":"numeric_(len = 1L, frac_na = 0)  numeric_bounded(left, right, len = 1L, frac_na = 0)  numeric_left_bounded(left, len = 1L, frac_na = 0)  numeric_right_bounded(right, len = 1L, frac_na = 0)  numeric_positive(len = 1L, frac_na = 0)  numeric_negative(len = 1L, frac_na = 0)"},{"path":"/reference/numeric_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Numeric generators — numeric_","text":"len Length generated vectors. len single number vectors length. len numeric vector length 2 produce vectors lengths minimum maximum, inclusive. example len = c(1L, 10L) produce integer vectors lengths 1 10. frac_na approximate fraction NA values included vector. fraction 0, default, include NA values. fraction 0.5 include around 50% NA values. left minimum possible value generated numbers, inclusive. right maximum possible value generated numbers, inclusive.","code":""},{"path":"/reference/numeric_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Numeric generators — numeric_","text":"hedgehog.internal.gen generator","code":""},{"path":"/reference/one_of.html","id":null,"dir":"Reference","previous_headings":"","what":"Randomly choose between generators — one_of","title":"Randomly choose between generators — one_of","text":"Randomly choose generators","code":""},{"path":"/reference/one_of.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Randomly choose between generators — one_of","text":"","code":"one_of(..., prob = NULL)"},{"path":"/reference/one_of.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Randomly choose between generators — one_of","text":"... Generators choose prob vector probability weights obtaining elements vector sampled.","code":""},{"path":"/reference/one_of.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Randomly choose between generators — one_of","text":"hedgehog.internal.gen generator","code":""},{"path":"/reference/posixct_.html","id":null,"dir":"Reference","previous_headings":"","what":"POSIXct generators — posixct_","title":"POSIXct generators — posixct_","text":"set generators POSIXct vectors.","code":""},{"path":"/reference/posixct_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"POSIXct generators — posixct_","text":"","code":"posixct_(len = 1L, frac_na = 0)  posixct_bounded(left, right, len = 1L, frac_na = 0)  posixct_left_bounded(left, len = 1L, frac_na = 0)  posixct_right_bounded(right, len = 1L, frac_na = 0)"},{"path":"/reference/posixct_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"POSIXct generators — posixct_","text":"len Length generated vectors. len single number vectors length. len numeric vector length 2 produce vectors lengths minimum maximum, inclusive. example len = c(1L, 10L) produce integer vectors lengths 1 10. frac_na approximate fraction NA values included vector. fraction 0, default, include NA values. fraction 0.5 include around 50% NA values. left minimum possible value generated numbers, inclusive. right maximum possible value generated numbers, inclusive.","code":""},{"path":"/reference/posixct_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"POSIXct generators — posixct_","text":"hedgehog.internal.gen generator","code":""},{"path":"/reference/tibble_.html","id":null,"dir":"Reference","previous_headings":"","what":"Tibble — tibble_","title":"Tibble — tibble_","text":"Tibble","code":""},{"path":"/reference/tibble_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tibble — tibble_","text":"","code":"tibble_(..., rows = c(1L, 10L))"},{"path":"/reference/tibble_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tibble — tibble_","text":"... Dots rows Rows","code":""},{"path":"/reference/tibble_of.html","id":null,"dir":"Reference","previous_headings":"","what":"Tibble of — tibble_of","title":"Tibble of — tibble_of","text":"Tibble ","code":""},{"path":"/reference/tibble_of.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tibble of — tibble_of","text":"","code":"tibble_of(..., rows = c(1L, 10L), cols = c(1L, 10L))"},{"path":"/reference/tibble_of.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tibble of — tibble_of","text":"... Dots rows Rows cols Cols","code":""}]
